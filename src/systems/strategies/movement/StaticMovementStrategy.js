/**
 * –°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–µ–ø–æ–¥–≤–∏–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É–ª—å–µ–º –∏ –¥—Ä—É–≥–∏–º–∏ —Å—Ç–∞—Ç–∏—á–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
 */
export class StaticMovementStrategy {
    constructor(gameObject, config) {
        this.gameObject = gameObject;
        this.config = config;
        
        console.log(`üè† [StaticMovementStrategy] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è ${gameObject.enemyType}`);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
     * @param {number} time - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
     * @param {number} delta - –í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    update(time, delta) {
        // –°—Ç–∞—Ç–∏—á–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–µ –¥–≤–∏–≥–∞–µ—Ç—Å—è
        // –ü—Ä–æ—Å—Ç–æ —É–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–≤–Ω–∞ –Ω—É–ª—é
        if (this.gameObject.body) {
            this.gameObject.body.setVelocity(0, 0);
        } else if (this.gameObject.physicsBody) {
            this.gameObject.physicsBody.setVelocity(0, 0);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –¥–≤–∏–∂–µ–Ω–∏—è
     * @returns {number}
     */
    getSpeed() {
        return 0; // –ù–µ –¥–≤–∏–≥–∞–µ—Ç—Å—è
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏
     * @param {Object} target - –¶–µ–ª—å
     * @returns {boolean}
     */
    isTargetReached(target) {
        // –°—Ç–∞—Ç–∏—á–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–µ –º–æ–∂–µ—Ç –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏
        return false;
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è
     */
    stopMovement() {
        if (this.gameObject.body) {
            this.gameObject.body.setVelocity(0, 0);
        } else if (this.gameObject.physicsBody) {
            this.gameObject.physicsBody.setVelocity(0, 0);
        }
    }
}
