import { ABILITIES } from '../types/abilityTypes.js';
import { defenseTypes } from '../types/defenseTypes.js';

/**
 * –°–∏—Å—Ç–µ–º–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –∏–≥—Ä–æ–∫–∞
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
 */
export class AbilitySystem {
    constructor(scene) {
        this.scene = scene;
        
        // –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
        this.abilities = {
            TAP_DAMAGE: ABILITIES.TAP_DAMAGE.baseValue,      // –£—Ä–æ–Ω –ø–æ —Ç–∞–ø—É
            TAP_EXPLOSION: ABILITIES.TAP_EXPLOSION.baseValue, // –í–∑—Ä—ã–≤ –ø–æ —Ç–∞–ø—É
            EGG_HEALTH: ABILITIES.EGG_HEALTH.baseValue,     // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ —è–π—Ü–∞
            EGG_DAMAGE: ABILITIES.EGG_DAMAGE.baseValue,     // –£—Ä–æ–Ω —è–π—Ü–∞
            EGG_COOLDOWN: ABILITIES.EGG_COOLDOWN.baseValue, // –ö—É–ª–¥–∞—É–Ω —è–π—Ü–∞
            EGG_RADIUS: ABILITIES.EGG_RADIUS.baseValue,     // –†–∞–¥–∏—É—Å –ø–æ—Ä–∞–∂–µ–Ω–∏—è —è–π—Ü–∞
            LUCK: ABILITIES.LUCK.baseValue,                 // –£–¥–∞—á–∞
            EGG_AURA: ABILITIES.EGG_AURA.baseValue,         // –ê—É—Ä–∞ (–º–Ω–æ–∂–∏—Ç–µ–ª—å)
            EGG_EXPLOSION: ABILITIES.EGG_EXPLOSION.baseValue, // –í–∑—Ä—ã–≤ —è–π—Ü–∞ (–º–Ω–æ–∂–∏—Ç–µ–ª—å)
            EGG_RECOVERY: ABILITIES.EGG_RECOVERY.baseValue, // –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —è–π—Ü–∞
            PIT: ABILITIES.PIT.baseValue,                   // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–º –Ω–∞ –ø–æ–ª–µ
            SHOVEL_COUNT: ABILITIES.SHOVEL_COUNT.baseValue  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ–ø–∞—Ç
        };
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —É—Ä–æ–Ω –ø–æ —Ç–∞–ø—É
     * @returns {number}
     */
    getTapDamage() {
        return this.abilities.TAP_DAMAGE;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –≤–∑—Ä—ã–≤–∞ –ø–æ —Ç–∞–ø—É
     * @returns {number}
     */
    getTapExplosion() {
        return this.abilities.TAP_EXPLOSION;
    }

    /**
    * –ü–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–Ω –≤–∑—Ä—ã–≤–∞ –ø–æ —Ç–∞–ø—É (—É—Ä–æ–Ω –ø–æ —Ç–∞–ø—É * –º–Ω–æ–∂–∏—Ç–µ–ª—å –≤–∑—Ä—ã–≤–∞)
    * @returns {number}
    */
    getTapExplosionDamage() {
        return this.abilities.TAP_DAMAGE * this.abilities.TAP_EXPLOSION;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ —è–π—Ü–∞
     * @returns {number}
     */
    getEggMaxHealth() {
        return this.abilities.EGG_HEALTH;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —É—Ä–æ–Ω —è–π—Ü–∞
     * @returns {number}
     */
    getEggDamage() {
        return this.abilities.EGG_DAMAGE;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∫—É–ª–¥–∞—É–Ω —è–π—Ü–∞
     * @returns {number} –ö—É–ª–¥–∞—É–Ω –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    getEggCooldown() {
        return this.abilities.EGG_COOLDOWN;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–∞–¥–∏—É—Å –ø–æ—Ä–∞–∂–µ–Ω–∏—è —è–π—Ü–∞
     * @returns {number} –†–∞–¥–∏—É—Å –≤ –ø–∏–∫—Å–µ–ª—è—Ö
     */
    getEggRadius() {
        return this.abilities.EGG_RADIUS;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —É–¥–∞—á—É
     * @returns {number}
     */
    getLuck() {
        return this.abilities.LUCK;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∞—É—Ä—ã
     * @returns {number}
     */
    getAura() {
        return this.abilities.EGG_AURA;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–Ω –∞—É—Ä—ã (—É—Ä–æ–Ω —è–π—Ü–∞ * –º–Ω–æ–∂–∏—Ç–µ–ª—å –∞—É—Ä—ã)
     * @returns {number}
     */
    getAuraDamage() {
        return this.abilities.EGG_DAMAGE * this.abilities.EGG_AURA;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –≤–∑—Ä—ã–≤–∞ —è–π—Ü–∞
     * @returns {number}
     */
    getEggExplosion() {
        return this.abilities.EGG_EXPLOSION;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–Ω –≤–∑—Ä—ã–≤–∞ —è–π—Ü–∞ (—É—Ä–æ–Ω —è–π—Ü–∞ * –º–Ω–æ–∂–∏—Ç–µ–ª—å –≤–∑—Ä—ã–≤–∞)
     * @returns {number}
     */
    getEggExplosionDamage() {
        return this.abilities.EGG_DAMAGE * this.abilities.EGG_EXPLOSION;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–Ω –≤–∑—Ä—ã–≤–∞ —è–π—Ü–∞ (—É—Ä–æ–Ω —è–π—Ü–∞ * –º–Ω–æ–∂–∏—Ç–µ–ª—å –≤–∑—Ä—ã–≤–∞)
     * @returns {number}
     */
    getEggExplosionRadius() {
        return 1000;
    }

    getEggExplosionCooldown() {
        return 1000;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–º –Ω–∞ –ø–æ–ª–µ
     * @returns {number}
     */
    getPitCount() {
        return this.abilities.PIT;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ–ø–∞—Ç
     * @returns {number}
     */
    getShovelCount() {
        return this.abilities.SHOVEL_COUNT;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é —è–π—Ü–∞ (HP –≤ —Å–µ–∫—É–Ω–¥—É)
     * @returns {number}
     */
    getEggRecovery() {
        return this.abilities.EGG_RECOVERY;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ —è–º—ã –∏–∑ defenseTypes
     * @returns {number}
     */
    getPitHealth() {
        return defenseTypes.pit.health;
    }

    /**
     * –ü—Ä–æ–∫–∞—á–∏–≤–∞–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞ –æ–¥–∏–Ω —É—Ä–æ–≤–µ–Ω—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ –º–∞–∫—Å–∏–º—É–º—É
     * @param {string} abilityType - –¢–∏–ø —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (TAP_DAMAGE, EGG_DAMAGE, etc.)
     * @returns {boolean} true –µ—Å–ª–∏ –ø—Ä–æ–∫–∞—á–∫–∞ —É—Å–ø–µ—à–Ω–∞, false –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º –∏–ª–∏ –æ—à–∏–±–∫–∞
     */
    upgradeAbility(abilityType) {
        const config = ABILITIES[abilityType];
        if (!config) {
            console.warn(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: ${abilityType}`);
            return false;
        }
        
        const oldValue = this.abilities[abilityType];
        console.log(`ü™ì [DEBUG] upgradeAbility(${abilityType}): —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ=${oldValue}, maxValue=${config.maxValue}, increase=${config.increase}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏ —É–∂–µ –º–∞–∫—Å–∏–º—É–º
        if (this.abilities[abilityType] >= config.maxValue) {
            console.log(`ü™ì [DEBUG] upgradeAbility(${abilityType}): –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º!`);
            return false; // –£–∂–µ –Ω–∞ –º–∞–∫—Å–∏–º—É–º–µ
        }
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
        let newValue = this.abilities[abilityType] + config.increase;
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º–æ–º
        newValue = Math.min(newValue, config.maxValue);
        
        this.abilities[abilityType] = newValue;
        
        console.log(`ü™ì [DEBUG] upgradeAbility(${abilityType}): –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ=${newValue}`);
        
        // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        this.scene.events.emit('ability:upgraded', {
            abilityType,
            oldValue: this.abilities[abilityType] - config.increase,
            newValue: newValue,
            isMaxLevel: newValue >= config.maxValue
        });
        
        return true;
    }

    /**
     * –£–º–µ–Ω—å—à–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É, —Å —Å–æ–±—ã—Ç–∏–µ–º –¥–ª—è UI
     * @param {string} abilityType
     * @param {number} value
     * @returns {boolean}
     */
    decrementAbility(abilityType, value = 1) {
        if (!this.abilities.hasOwnProperty(abilityType)) {
            return false;
        }
        const oldValue = this.abilities[abilityType];
        const newValue = Math.max(0, oldValue - value);
        if (newValue === oldValue) {
            return false;
        }
        this.abilities[abilityType] = newValue;
        // —É–≤–µ–¥–æ–º–ª—è–µ–º UI —Ç–µ–º –∂–µ —Å–æ–±—ã—Ç–∏–µ–º
        this.scene.events.emit('ability:upgraded', {
            abilityType,
            oldValue,
            newValue,
            isMaxLevel: false
        });
        return true;
    }
    
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
     * @returns {Object}
     */
    getAllAbilities() {
        return {
            tapDamage: this.getTapDamage(),
            tapExplosion: this.getTapExplosion(),
            tapExplosionDamage: this.getTapExplosionDamage(),
            eggMaxHealth: this.getEggMaxHealth(),
            eggDamage: this.getEggDamage(),
            eggCooldown: this.getEggCooldown(),
            eggRadius: this.getEggRadius(),
            luck: this.getLuck(),
            pitCount: this.getPitCount(),
            shovelCount: this.getShovelCount(),
            eggRecovery: this.getEggRecovery(),
            aura: this.getAura(),
            auraDamage: this.getAuraDamage(),
            eggExplosion: this.getEggExplosion(),
            eggExplosionDamage: this.getEggExplosionDamage(),
            eggExplosionRadius: this.getEggExplosionRadius(),
            eggExplosionCooldown: this.getEggExplosionCooldown()
        };
    }
    
    /**
     * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫ –±–∞–∑–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
     */
    resetAllAbilities() {
        this.abilities = {
            TAP_DAMAGE: ABILITIES.TAP_DAMAGE.baseValue,
            TAP_EXPLOSION: ABILITIES.TAP_EXPLOSION.baseValue,
            EGG_HEALTH: ABILITIES.EGG_HEALTH.baseValue,
            EGG_DAMAGE: ABILITIES.EGG_DAMAGE.baseValue,
            EGG_COOLDOWN: ABILITIES.EGG_COOLDOWN.baseValue,
            EGG_RADIUS: ABILITIES.EGG_RADIUS.baseValue,
            LUCK: ABILITIES.LUCK.baseValue,
            EGG_AURA: ABILITIES.EGG_AURA.baseValue,
            EGG_EXPLOSION: ABILITIES.EGG_EXPLOSION.baseValue,
            EGG_RECOVERY: ABILITIES.EGG_RECOVERY.baseValue,
            PIT: ABILITIES.PIT.baseValue,
            SHOVEL_COUNT: ABILITIES.SHOVEL_COUNT.baseValue
        };
        
        this.scene.events.emit('abilities:reset');
    }
    
    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
     */
    destroy() {
        this.scene = null;
        this.abilities = null;
    }
}
