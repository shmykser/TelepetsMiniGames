/**
 * –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∑–∞–º–∫–æ–≤
 * –°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â—É—é –ª–æ–≥–∏–∫—É –∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã
 */

export class LockController {
    constructor(scene, config, pet) {
        this.scene = scene;
        this.config = config;
        this.pet = pet;
        this.isGameActive = false;
        
        // –°—á–µ—Ç—á–∏–∫–∏
        this.attempts = 0;
        this.maxAttempts = config.maxAttempts || 3;
        
        console.log(`üéÆ [LockController] –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–æ–∑–¥–∞–Ω`, { config, maxAttempts: this.maxAttempts });
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω)
     */
    createGameElements() {
        throw new Error('createGameElements() must be implemented in child class');
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω)
     */
    update(time, delta) {
        // –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω)
     */
    handleInput() {
        // –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è –ø–æ–±–µ–¥—ã (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω)
     */
    checkWinCondition() {
        return false;
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω)
     */
    cleanup() {
        this.isGameActive = false;
        console.log(`üßπ [LockController] –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞`);
    }
    
    /**
     * –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫
     */
    incrementAttempts() {
        this.attempts++;
        console.log(`üìä [LockController] –ü–æ–ø—ã—Ç–∫–∞ ${this.attempts}/${this.maxAttempts}`);
        
        if (this.attempts >= this.maxAttempts) {
            this.onFailure();
            return true;
        }
        return false;
    }
    
    /**
     * –£—Å–ø–µ—à–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ
     */
    onSuccess() {
        console.log(`‚úÖ [LockController] –£—Å–ø–µ—Ö!`);
        this.isGameActive = false;
        
        if (this.scene && this.scene.onSuccess) {
            this.scene.onSuccess();
        }
    }
    
    /**
     * –ü—Ä–æ–≤–∞–ª –≤–∑–ª–æ–º–∞
     */
    onFailure() {
        console.log(`‚ùå [LockController] –ü—Ä–æ–≤–∞–ª!`);
        this.isGameActive = false;
        
        if (this.scene && this.scene.onFailure) {
            this.scene.onFailure();
        }
    }
    
    /**
     * –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã
     */
    start() {
        this.isGameActive = true;
        this.attempts = 0;
        console.log(`üéÆ [LockController] –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å`);
    }
}

