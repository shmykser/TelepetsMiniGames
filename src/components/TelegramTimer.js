/**
 * Telegram-—Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä
 * –ò–º–∏—Ç–∏—Ä—É–µ—Ç –¥–∏–∑–∞–π–Ω –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ Telegram WebApp
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç HTML/CSS –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
 */
export class TelegramTimer {
    constructor(scene, x, y, width = 90, height = 40) {
        this.scene = scene;
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.lastCanvasPosition = { left: 0, top: 0 };
        
        // Telegram —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
        this.colors = {
            accent: '#2481cc',       // Telegram accent color
            accentDark: '#1e6bb8',   // –¢–µ–º–Ω–µ–µ –¥–ª—è hover —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
            text: '#ffffff',         // –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç
            background: 'rgba(36, 129, 204, 0.7)',   // –§–æ–Ω –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
            backgroundAlpha: 0.7     // –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Ñ–æ–Ω–∞
        };
        
        this.createElements();
    }
    
    createElements() {
        // –°–æ–∑–¥–∞–µ–º HTML –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
        this.container = document.createElement('div');
        this.container.style.position = 'absolute';
        this.container.style.left = `${this.x - this.width / 2}px`;
        this.container.style.top = `${this.y - this.height / 2}px`;
        this.container.style.width = `${this.width}px`;
        this.container.style.height = `${this.height}px`;
        this.container.style.backgroundColor = this.colors.background;
        this.container.style.borderRadius = '8px';
        this.container.style.border = `1px solid ${this.colors.accent}40`; // 40 = 25% opacity
        this.container.style.display = 'flex';
        this.container.style.alignItems = 'center';
        this.container.style.justifyContent = 'center';
        this.container.style.fontFamily = 'SF Pro Display, -apple-system, BlinkMacSystemFont, system-ui, sans-serif';
        this.container.style.fontSize = '18px';
        this.container.style.fontWeight = '600';
        this.container.style.color = this.colors.text;
        this.container.style.letterSpacing = '0.5px';
        this.container.style.zIndex = '1000';
        this.container.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.15)';
        this.container.style.userSelect = 'none';
        this.container.style.pointerEvents = 'none';
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç —Ç–∞–π–º–µ—Ä–∞
        this.textElement = document.createElement('span');
        this.textElement.textContent = '10:00';
        this.textElement.style.textShadow = '0 1px 2px rgba(0, 0, 0, 0.2)';
        
        this.container.appendChild(this.textElement);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
        document.body.appendChild(this.container);
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏)
        console.log('üé® [TelegramTimer] HTML —ç–ª–µ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é:', this.colors.background);
        
        // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º
        this.setVisible(false);
    }
    
    setVisible(visible) {
        if (this.container.style.display !== (visible ? 'flex' : 'none')) {
            this.container.style.display = visible ? 'flex' : 'none';
        }
    }
    
    setText(text) {
        if (this.textElement.textContent !== text) {
            this.textElement.textContent = text;
        }
    }
    
    setPosition(x, y) {
        this.x = x;
        this.y = y;
        this.container.style.left = `${this.x - this.width / 2}px`;
        this.container.style.top = `${this.y - this.height / 2}px`;
    }
    
    setColor(color) {
        this.colors.text = color;
        this.textElement.style.color = color;
    }
    
    updatePosition() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ canvas
        if (this.scene && this.scene.game && this.scene.game.canvas) {
            const canvas = this.scene.game.canvas;
            const canvasRect = canvas.getBoundingClientRect();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –ø–æ–∑–∏—Ü–∏—è canvas
            if (this.lastCanvasPosition.left !== canvasRect.left || 
                this.lastCanvasPosition.top !== canvasRect.top) {
                
                this.lastCanvasPosition.left = canvasRect.left;
                this.lastCanvasPosition.top = canvasRect.top;
                
                this.container.style.left = `${canvasRect.left + this.x - this.width / 2}px`;
                this.container.style.top = `${canvasRect.top + this.y - this.height / 2}px`;
            }
        }
    }
    
    destroy() {
        if (this.container && this.container.parentNode) {
            this.container.parentNode.removeChild(this.container);
        }
    }
}