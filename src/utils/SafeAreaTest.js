/**
 * –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã Safe Area
 * –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
 */
export class SafeAreaTest {
    /**
     * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ safe-area
     * @param {Phaser.Scene} scene - –°—Ü–µ–Ω–∞ Phaser
     */
    static createTestElements(scene) {
        const safeAreas = SafeAreaUtils.getAllSafeAreas();
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ safe-area
        const colors = {
            top: 0xff0000,    // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è top
            bottom: 0x00ff00, // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è bottom
            left: 0x0000ff,   // –°–∏–Ω–∏–π –¥–ª—è left
            right: 0xffff00   // –ñ–µ–ª—Ç—ã–π –¥–ª—è right
        };
        
        // Top safe area
        if (safeAreas.top > 0) {
            scene.add.rectangle(
                scene.scale.width / 2,
                safeAreas.top / 2,
                scene.scale.width,
                safeAreas.top,
                colors.top,
                0.5
            ).setDepth(9999);
            
            scene.add.text(
                scene.scale.width / 2,
                safeAreas.top / 2,
                `TOP: ${safeAreas.top}px`,
                { fontSize: '16px', fill: '#ffffff' }
            ).setOrigin(0.5).setDepth(10000);
        }
        
        // Bottom safe area
        if (safeAreas.bottom > 0) {
            scene.add.rectangle(
                scene.scale.width / 2,
                scene.scale.height - safeAreas.bottom / 2,
                scene.scale.width,
                safeAreas.bottom,
                colors.bottom,
                0.5
            ).setDepth(9999);
            
            scene.add.text(
                scene.scale.width / 2,
                scene.scale.height - safeAreas.bottom / 2,
                `BOTTOM: ${safeAreas.bottom}px`,
                { fontSize: '16px', fill: '#ffffff' }
            ).setOrigin(0.5).setDepth(10000);
        }
        
        // Left safe area
        if (safeAreas.left > 0) {
            scene.add.rectangle(
                safeAreas.left / 2,
                scene.scale.height / 2,
                safeAreas.left,
                scene.scale.height,
                colors.left,
                0.5
            ).setDepth(9999);
            
            scene.add.text(
                safeAreas.left / 2,
                scene.scale.height / 2,
                `LEFT: ${safeAreas.left}px`,
                { fontSize: '16px', fill: '#ffffff' }
            ).setOrigin(0.5).setDepth(10000);
        }
        
        // Right safe area
        if (safeAreas.right > 0) {
            scene.add.rectangle(
                scene.scale.width - safeAreas.right / 2,
                scene.scale.height / 2,
                safeAreas.right,
                scene.scale.height,
                colors.right,
                0.5
            ).setDepth(9999);
            
            scene.add.text(
                scene.scale.width - safeAreas.right / 2,
                scene.scale.height / 2,
                `RIGHT: ${safeAreas.right}px`,
                { fontSize: '16px', fill: '#ffffff' }
            ).setOrigin(0.5).setDepth(10000);
        }
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ safe-area
        const isSupported = SafeAreaUtils.isSafeAreaSupported();
        scene.add.text(
            10,
            10,
            `Safe Area Support: ${isSupported ? 'YES' : 'NO'}`,
            { fontSize: '20px', fill: '#ffffff' }
        ).setDepth(10000);
        
        console.log('üì± Safe Area Test:', {
            supported: isSupported,
            areas: safeAreas,
            viewport: {
                width: scene.scale.width,
                height: scene.scale.height
            }
        });
    }
}
