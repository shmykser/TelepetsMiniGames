/**
 * –°–∏—Å—Ç–µ–º–∞ —É—Å–∏–ª–µ–Ω–∏—è –≤—Ä–∞–≥–æ–≤
 * –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—É Single Responsibility Principle
 */
export class EnhancementSystem {
    /**
     * –£—Ä–æ–≤–Ω–∏ —É—Å–∏–ª–µ–Ω–∏—è –≤—Ä–∞–≥–æ–≤
     */
    static ENHANCEMENT_LEVELS = {
        NORMAL: { 
            multiplier: 1, 
            weight: 70, 
            name: '', 
            suffix: '',
            tint: 0xffffff,
            particleConfig: null
        },
        ELITE: { 
            multiplier: 2, 
            weight: 25, 
            name: '–≠–ª–∏—Ç–Ω—ã–π', 
            suffix: '_elite',
            tint: 0xffffaa,
            particleConfig: {
                scale: { start: 0.1, end: 0 },
                speed: { min: 10, max: 20 },
                lifespan: 1000,
                quantity: 1,
                frequency: 2000
            }
        },
        CHAMPION: { 
            multiplier: 3, 
            weight: 5, 
            name: '–ß–µ–º–ø–∏–æ–Ω', 
            suffix: '_champion',
            tint: 0xffaa00,
            particleConfig: {
                scale: { start: 0.2, end: 0 },
                speed: { min: 20, max: 40 },
                lifespan: 1500,
                quantity: 2,
                frequency: 1000
            }
        }
    };

    /**
     * –£—Å–∏–ª–∏–≤–∞–µ—Ç –≤—Ä–∞–≥–∞ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
     * @param {Enemy} enemy - –í—Ä–∞–≥ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è
     * @param {string} baseEnemyType - –ë–∞–∑–æ–≤—ã–π —Ç–∏–ø –≤—Ä–∞–≥–∞
     * @param {number} gameTime - –í—Ä–µ–º—è –∏–≥—Ä—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     * @returns {Enemy} –£—Å–∏–ª–µ–Ω–Ω—ã–π –∏–ª–∏ –æ–±—ã—á–Ω—ã–π –≤—Ä–∞–≥
     */
    static enhanceEnemy(enemy, baseEnemyType, gameTime = 0) {
        const enhancementLevel = this.rollEnhancement(gameTime);
        
        if (enhancementLevel === this.ENHANCEMENT_LEVELS.NORMAL) {
            return enemy; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        }
        
        return this.applyEnhancement(enemy, baseEnemyType, enhancementLevel);
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å —É—Å–∏–ª–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã
     * @param {number} gameTime - –í—Ä–µ–º—è –∏–≥—Ä—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     * @returns {Object} –£—Ä–æ–≤–µ–Ω—å —É—Å–∏–ª–µ–Ω–∏—è
     */
    static rollEnhancement(gameTime) {
        const weights = this.getEnhancementWeights(gameTime);
        const random = Math.random() * 100;
        let cumulative = 0;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —É—Å–∏–ª–µ–Ω–∏—è
        for (const [levelName, level] of Object.entries(this.ENHANCEMENT_LEVELS)) {
            cumulative += weights[levelName.toLowerCase()];
            if (random <= cumulative) {
                return level;
            }
        }
        
        return this.ENHANCEMENT_LEVELS.NORMAL;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤–µ—Å–∞ —É—Å–∏–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã
     * @param {number} gameTime - –í—Ä–µ–º—è –∏–≥—Ä—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     * @returns {Object} –í–µ—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
     */
    static getEnhancementWeights(gameTime) {
        const minutes = Math.floor(gameTime / 60000);
        
        if (minutes < 2) {
            return { normal: 0, elite: 50, champion: 50 };
        } else if (minutes < 5) {
            return { normal: 80, elite: 20, champion: 0 };
        } else {
            return { normal: 70, elite: 25, champion: 5 };
        }
    }

    /**
     * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —É—Å–∏–ª–µ–Ω–∏–µ –∫ –≤—Ä–∞–≥—É
     * @param {Enemy} enemy - –í—Ä–∞–≥ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è
     * @param {string} baseEnemyType - –ë–∞–∑–æ–≤—ã–π —Ç–∏–ø –≤—Ä–∞–≥–∞
     * @param {Object} enhancementLevel - –£—Ä–æ–≤–µ–Ω—å —É—Å–∏–ª–µ–Ω–∏—è
     * @returns {Enemy} –£—Å–∏–ª–µ–Ω–Ω—ã–π –≤—Ä–∞–≥
     */
    static applyEnhancement(enemy, baseEnemyType, enhancementLevel) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        enemy._originalHealth = enemy.health;
        enemy._originalMaxHealth = enemy._maxHealth;
        enemy._originalDamage = enemy.damage;
        enemy._originalSize = enemy.size;
        
        // –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (—Å–Ω–∞—á–∞–ª–∞ maxHealth, –ø–æ—Ç–æ–º health)
        enemy._maxHealth *= enhancementLevel.multiplier;
        enemy.health *= enhancementLevel.multiplier;
        enemy.damage *= enhancementLevel.multiplier;
        enemy.size *= enhancementLevel.multiplier;
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        console.log(`üîß EnhancementSystem: –£—Å–∏–ª–∏–≤–∞–µ–º ${enemy._enemyData.name} –¥–æ ${enhancementLevel.name}`);
        console.log(`üîß Health: ${enemy._originalHealth} -> ${enemy.health}`);
        console.log(`üîß MaxHealth: ${enemy._originalMaxHealth} -> ${enemy._maxHealth}`);
        console.log(`üîß HealthPercent: ${(enemy.health / enemy._maxHealth * 100).toFixed(1)}%`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        const newScale = enemy.scaleX * enhancementLevel.multiplier;
        enemy.setScale(newScale);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä HealthBar –¥–ª—è —É—Å–∏–ª–µ–Ω–Ω—ã—Ö –≤—Ä–∞–≥–æ–≤
        if (enemy.healthBar && enemy.healthBar.updateBarSize) {
            enemy.healthBar.updateBarSize();
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        this.addEnhancementEffects(enemy, enhancementLevel);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è
        enemy.displayName = `${enhancementLevel.name} ${enemy._enemyData.name}`.trim();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å —É—Å–∏–ª–µ–Ω–∏—è
        enemy.enhancementLevel = enhancementLevel;
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —É—Å–∏–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–∞–≥–∞
        this.notifyEnhancement(enemy, enhancementLevel);
        
        return enemy;
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã —É—Å–∏–ª–µ–Ω–∏—è
     * @param {Enemy} enemy - –í—Ä–∞–≥
     * @param {Object} enhancementLevel - –£—Ä–æ–≤–µ–Ω—å —É—Å–∏–ª–µ–Ω–∏—è
     */
    static addEnhancementEffects(enemy, enhancementLevel) {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ—Ç—Ç–µ–Ω–æ–∫
        enemy.setTint(enhancementLevel.tint);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—ã –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        if (enhancementLevel.particleConfig) {
            this.addParticleEffects(enemy, enhancementLevel.particleConfig);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —á–µ–º–ø–∏–æ–Ω–æ–≤
        if (enhancementLevel === this.ENHANCEMENT_LEVELS.CHAMPION) {
            this.addChampionAnimation(enemy);
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç—ã —á–∞—Å—Ç–∏—Ü
     * @param {Enemy} enemy - –í—Ä–∞–≥
     * @param {Object} particleConfig - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–∞—Å—Ç–∏—Ü
     */
    static addParticleEffects(enemy, particleConfig) {
        // –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã –≤–æ–∫—Ä—É–≥ –≤—Ä–∞–≥–∞
        const particles = enemy.scene.add.particles(enemy.x, enemy.y, 'sparkle', {
            ...particleConfig,
            follow: enemy,
            followOffset: { x: 0, y: 0 }
        });
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã –∫ –≤—Ä–∞–≥—É
        enemy.enhancementParticles = particles;
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —á–µ–º–ø–∏–æ–Ω–æ–≤
     * @param {Enemy} enemy - –í—Ä–∞–≥
     */
    static addChampionAnimation(enemy) {
        // –ü—É–ª—å—Å–∞—Ü–∏—è
        enemy.scene.tweens.add({
            targets: enemy,
            scaleX: enemy.scaleX * 1.1,
            scaleY: enemy.scaleY * 1.1,
            duration: 1000,
            yoyo: true,
            repeat: -1,
            ease: 'Sine.easeInOut'
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —É—Å–∏–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–∞–≥–∞
     * @param {Enemy} enemy - –í—Ä–∞–≥
     * @param {Object} enhancementLevel - –£—Ä–æ–≤–µ–Ω—å —É—Å–∏–ª–µ–Ω–∏—è
     */
    static notifyEnhancement(enemy, enhancementLevel) {
        if (enemy.scene && enemy.scene.events) {
            enemy.scene.events.emit('enhancedEnemySpawned', {
                enemy: enemy,
                level: enhancementLevel,
                position: { x: enemy.x, y: enemy.y }
            });
        }
    }

    /**
     * –û—á–∏—â–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç—ã —É—Å–∏–ª–µ–Ω–∏—è
     * @param {Enemy} enemy - –í—Ä–∞–≥
     */
    static cleanupEnhancement(enemy) {
        if (enemy.enhancementParticles) {
            enemy.enhancementParticles.destroy();
            enemy.enhancementParticles = null;
        }
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
        if (enemy.scene && enemy.scene.tweens) {
            enemy.scene.tweens.killTweensOf(enemy);
        }
    }
}
