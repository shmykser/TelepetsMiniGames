/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è —Å—Ü–µ–Ω–∞ Pet Thief
 * –û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä —Å –ø–∏—Ç–æ–º—Ü–µ–º, –∂–∏–ª–∏—â–∞–º–∏ –∏ —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏
 */

import Phaser from 'phaser';
import { WorldGenerator } from '../systems/world/WorldGenerator.js';
import { WorldRenderer } from '../systems/world/WorldRenderer.js';
import { Pet } from '../objects/Pet.js';
import { PetControlSystem } from '../systems/PetControlSystem.js';
import { EventSystem } from '../systems/EventSystem.js';
import { ObstacleInteractionSystem } from '../systems/ObstacleInteractionSystem.js';
import { WORLD_SIZE, WORLD_CONSTANTS, WORLD_GENERATION } from '../types/worldTypes.js';
import { SafeAreaUtils } from '../utils/SafeAreaUtils.js';

export class PetThiefScene extends Phaser.Scene {
    constructor() {
        super({ key: 'PetThiefScene' });
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        this.isGameActive = false;
        this.world = null;
        this.pet = null;
        
        // –°–∏—Å—Ç–µ–º—ã
        this.worldGenerator = null;
        this.worldRenderer = null;
        this.petControlSystem = null;
        this.eventSystem = null;
        this.obstacleInteractionSystem = null;
        
        // UI —ç–ª–µ–º–µ–Ω—Ç—ã
        this.inventoryUI = null;
        
        console.log('üéÆ [PetThiefScene] –°—Ü–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞');
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã
     * @param {Object} data - –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∏–∑ –¥—Ä—É–≥–æ–π —Å—Ü–µ–Ω—ã
     */
    create(data) {
        console.log('üéÆ [PetThiefScene] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ü–µ–Ω—ã...');
        
        // 1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –º–∏—Ä–∞
        this.initializeWorld(data);
        
        // 2. –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–∏—Ä–∞
        this.renderWorld();
        
        // 3. –°–æ–∑–¥–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞
        this.createPet(data);
        
        // 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã
        this.setupCamera();
        
        // 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º
        this.initializeSystems();
        
        // 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI
        this.setupUI();
        
        // 7. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        this.setupEventHandlers();
        
        // 8. –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
        this.startGame();
        
        console.log('üéÆ [PetThiefScene] –°—Ü–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∏—Ä–∞
     * @param {Object} data 
     */
    initializeWorld(data) {
        // –ï—Å–ª–∏ –º–∏—Ä —É–∂–µ –ø–µ—Ä–µ–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (data && data.world) {
            this.world = data.world;
            console.log('üó∫Ô∏è [PetThiefScene] –ó–∞–≥—Ä—É–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∏—Ä');
        } else {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –º–∏—Ä
            const seed = data && data.seed ? data.seed : WORLD_GENERATION.getSeed();
            this.worldGenerator = new WorldGenerator(seed);
            this.world = this.worldGenerator.generate();
            console.log('üó∫Ô∏è [PetThiefScene] –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –º–∏—Ä');
        }
    }
    
    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–∏—Ä–∞
     */
    renderWorld() {
        this.worldRenderer = new WorldRenderer(this, this.world);
        this.worldRenderer.render();
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞
     * @param {Object} data 
     */
    createPet(data) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
        const startPos = data && data.returnPosition 
            ? data.returnPosition 
            : this.world.playerHouse.position;
        
        // –°–æ–∑–¥–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞
        this.pet = Pet.CreatePet(this, startPos.x, startPos.y);
        
        console.log(`üêæ [PetThiefScene] –ü–∏—Ç–æ–º–µ—Ü —Å–æ–∑–¥–∞–Ω –≤ –ø–æ–∑–∏—Ü–∏–∏ (${startPos.x}, ${startPos.y})`);
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã
     */
    setupCamera() {
        const camera = this.cameras.main;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—ã –∫–∞–º–µ—Ä—ã = –≥—Ä–∞–Ω–∏—Ü—ã –º–∏—Ä–∞
        camera.setBounds(0, 0, WORLD_SIZE.width, WORLD_SIZE.height);
        
        // –ö–∞–º–µ—Ä–∞ —Å–ª–µ–¥—É–µ—Ç –∑–∞ –ø–∏—Ç–æ–º—Ü–µ–º —Å –ø–ª–∞–≤–Ω–æ—Å—Ç—å—é
        camera.startFollow(
            this.pet, 
            true, // roundPixels
            WORLD_CONSTANTS.CAMERA.FOLLOW_LERP, // lerpX
            WORLD_CONSTANTS.CAMERA.FOLLOW_LERP  // lerpY
        );
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑—É–º
        camera.setZoom(WORLD_CONSTANTS.CAMERA.ZOOM);
        
        console.log('üì∑ [PetThiefScene] –ö–∞–º–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
     */
    initializeSystems() {
        // –°–∏—Å—Ç–µ–º–∞ —Å–æ–±—ã—Ç–∏–π
        this.eventSystem = new EventSystem();
        
        // –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–µ–º
        this.petControlSystem = new PetControlSystem(this, this.pet);
        
        // –°–∏—Å—Ç–µ–º–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è–º–∏
        this.obstacleInteractionSystem = new ObstacleInteractionSystem(this);
        this.obstacleInteractionSystem.initialize();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –≤ —Å–∏—Å—Ç–µ–º—É
        const obstacles = this.worldRenderer.getObstacles();
        obstacles.forEach(obstacle => {
            if (obstacle.getData('obstacleData')) {
                this.obstacleInteractionSystem.addObstacle(obstacle);
            }
        });
        
        console.log('‚öôÔ∏è [PetThiefScene] –°–∏—Å—Ç–µ–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI
     */
    setupUI() {
        // –°–æ–∑–¥–∞–µ–º UI –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        this.createInventoryUI();
        
        console.log('üñºÔ∏è [PetThiefScene] UI –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ UI –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
     */
    createInventoryUI() {
        // –ü–æ–∑–∏—Ü–∏—è —Å —É—á–µ—Ç–æ–º safe area
        const x = SafeAreaUtils.getSafeLeftPosition(20, 20);
        const y = SafeAreaUtils.getSafeTopPosition(20, 20);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        this.collectedItems = {
            coins: 0,
            jewels: 0,
            keys: 0
        };
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        this.inventoryUI = this.add.container(x, y);
        
        // –§–æ–Ω
        const background = this.add.rectangle(0, 0, 150, 80, 0x000000, 0.7);
        background.setOrigin(0);
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        const title = this.add.text(10, 5, '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å', {
            fontSize: '14px',
            fontFamily: 'Arial',
            fontStyle: 'bold',
            color: '#ffffff'
        });
        
        // –¢–µ–∫—Å—Ç —Å –º–æ–Ω–µ—Ç–∞–º–∏
        this.coinsText = this.add.text(10, 25, 'üí∞ –ú–æ–Ω–µ—Ç—ã: 0', {
            fontSize: '12px',
            fontFamily: 'Arial',
            color: '#ffff00'
        });
        
        // –¢–µ–∫—Å—Ç —Å –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç—è–º–∏ (–ø–æ–∫–∞ —Å–∫—Ä—ã—Ç)
        this.jewelsText = this.add.text(10, 42, 'üíé –î—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç–∏: 0', {
            fontSize: '12px',
            fontFamily: 'Arial',
            color: '#00ffff'
        });
        this.jewelsText.setVisible(false);
        
        // –¢–µ–∫—Å—Ç —Å –∫–ª—é—á–∞–º–∏ (–ø–æ–∫–∞ —Å–∫—Ä—ã—Ç)
        this.keysText = this.add.text(10, 59, 'üîë –ö–ª—é—á–∏: 0', {
            fontSize: '12px',
            fontFamily: 'Arial',
            color: '#ffffff'
        });
        this.keysText.setVisible(false);
        
        // –¢–µ–∫—Å—Ç —Å –æ—Ç–º—ã—á–∫–∞–º–∏ (–ø–æ–∫–∞ —Å–∫—Ä—ã—Ç)
        this.lockpicksText = this.add.text(10, 76, 'üîß –û—Ç–º—ã—á–∫–∏: 0', {
            fontSize: '12px',
            fontFamily: 'Arial',
            color: '#00ffff'
        });
        this.lockpicksText.setVisible(false);
        
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.inventoryUI.add([background, title, this.coinsText, this.jewelsText, this.keysText, this.lockpicksText]);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª—É–±–∏–Ω—É
        this.inventoryUI.setDepth(WORLD_CONSTANTS.DEPTH.UI);
        
        // –î–µ–ª–∞–µ–º –Ω–µ–ø–æ–¥–≤–∏–∂–Ω—ã–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–∞–º–µ—Ä—ã
        this.inventoryUI.setScrollFactor(0);
    }
    
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
     */
    updateInventoryUI() {
        if (!this.pet || !this.coinsText) return;
        
        const inventory = this.pet.inventory;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –º–æ–Ω–µ—Ç
        this.coinsText.setText(`üí∞ –ú–æ–Ω–µ—Ç—ã: ${inventory.get('coins')}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if (inventory.get('jewels') > 0 && this.jewelsText) {
            this.jewelsText.setVisible(true);
            this.jewelsText.setText(`üíé –î—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç–∏: ${inventory.get('jewels')}`);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª—é—á–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if (inventory.get('keys') > 0 && this.keysText) {
            this.keysText.setVisible(true);
            this.keysText.setText(`üîë –ö–ª—é—á–∏: ${inventory.get('keys')}`);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–º—ã—á–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if (inventory.get('lockpicks') > 0 && this.lockpicksText) {
            this.lockpicksText.setVisible(true);
            this.lockpicksText.setText(`üîß –û—Ç–º—ã—á–∫–∏: ${inventory.get('lockpicks')}`);
        } else if (this.lockpicksText) {
            // –°–∫—Ä—ã–≤–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç
            this.lockpicksText.setVisible(false);
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventHandlers() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–±–æ—Ä–∞ –º–æ–Ω–µ—Ç
        this.events.on('pet:coinsCollected', (data) => {
            this.updateInventoryUI();
            console.log(`üí∞ [PetThiefScene] –°–æ–±—Ä–∞–Ω–æ –º–æ–Ω–µ—Ç: +${data.amount} (–≤—Å–µ–≥–æ: ${data.total})`);
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–æ–º
        this.events.on('pet:enterHouse', (data) => {
            console.log('üè† [PetThiefScene] –í—Ö–æ–¥ –≤ –¥–æ–º:', data);
            this.enterHouse(data.house);
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏
        this.events.on('pet:targetReached', (data) => {
            console.log('üéØ [PetThiefScene] –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞');
        });
        
        console.log('üì° [PetThiefScene] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
     * @param {string} message 
     */
    showMessage(message) {
        const centerX = this.scale.width / 2;
        const centerY = this.scale.height / 2;
        
        const messageText = this.add.text(centerX, centerY, message, {
            fontSize: '24px',
            fontFamily: 'Arial',
            fontStyle: 'bold',
            color: '#ffffff',
            backgroundColor: '#000000',
            padding: { x: 20, y: 10 }
        }).setOrigin(0.5).setScrollFactor(0).setDepth(10000);
        
        // –ò—Å—á–µ–∑–∞–µ—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        this.tweens.add({
            targets: messageText,
            alpha: 0,
            duration: 1000,
            delay: 1000,
            onComplete: () => {
                messageText.destroy();
            }
        });
    }
    
    /**
     * –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
     */
    startGame() {
        this.isGameActive = true;
        console.log('üéÆ [PetThiefScene] –ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        this.showMessage('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Pet Thief!');
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã (–∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
     * @param {number} time 
     * @param {number} delta 
     */
    update(time, delta) {
        if (!this.isGameActive) return;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—ã
        if (this.petControlSystem) {
            this.petControlSystem.update(time, delta);
        }
        
        if (this.worldRenderer) {
            this.worldRenderer.update(time, delta);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∏—Ç–æ–º—Ü–∞
        if (this.pet && this.pet.isAlive) {
            this.pet.update(time, delta);
        }
    }
    
    /**
     * –í—Ö–æ–¥ –≤ –¥–æ–º
     * @param {Object} house - –î–∞–Ω–Ω—ã–µ –¥–æ–º–∞
     */
    enterHouse(house) {
        console.log('üö™ [PetThiefScene] –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–æ–º:', house);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–∏—Ç–æ–º—Ü–∞
        const petPosition = {
            x: this.pet.x,
            y: this.pet.y
        };
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–º–æ–∫
        const hasLock = house.security && house.security.level > 0;
        const isPlayerHouse = house.isPlayerHouse;
        
        // –°–≤–æ–π –¥–æ–º –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç
        if (isPlayerHouse) {
            console.log('üè° [PetThiefScene] –≠—Ç–æ —Å–≤–æ–π –¥–æ–º, –≤—Ö–æ–¥–∏–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏');
            this.enterHouseInterior(house, petPosition);
            return;
        }
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–º–æ–∫ - –Ω—É–∂–Ω–æ –≤–∑–ª–æ–º–∞—Ç—å
        if (hasLock) {
            console.log('üîí [PetThiefScene] –î–æ–º –∑–∞–ø–µ—Ä—Ç! –£—Ä–æ–≤–µ–Ω—å –∑–∞–º–∫–∞:', house.security.level);
            this.showMessage(`üîí –î–æ–º –∑–∞–ø–µ—Ä—Ç! –£—Ä–æ–≤–µ–Ω—å –∑–∞–º–∫–∞: ${house.security.level}`);
            
        // –°–æ–∑–¥–∞–µ–º –∑–∞–º–æ–∫ –¥–ª—è –¥–≤–µ—Ä–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–∑–ª–æ–º
        this.startDoorLockpicking(house, petPosition);
        } else {
            // –î–æ–º –Ω–µ –∑–∞–ø–µ—Ä—Ç - –≤—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω–æ
            console.log('üö™ [PetThiefScene] –î–æ–º –Ω–µ –∑–∞–ø–µ—Ä—Ç, –≤—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω–æ');
            this.showMessage('üö™ –î–æ–º –Ω–µ –∑–∞–ø–µ—Ä—Ç, –≤—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω–æ');
            this.enterHouseInterior(house, petPosition);
        }
    }
    
    /**
     * –í—Ö–æ–¥ –≤ –∏–Ω—Ç–µ—Ä—å–µ—Ä –¥–æ–º–∞ (–ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–∑–ª–æ–º–∞ –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ –∑–∞–ø–µ—Ä—Ç)
     * @param {Object} house - –î–∞–Ω–Ω—ã–µ –¥–æ–º–∞
     * @param {Object} petPosition - –ü–æ–∑–∏—Ü–∏—è –ø–∏—Ç–æ–º—Ü–∞
     */
    enterHouseInterior(house, petPosition) {
        console.log('‚úÖ [PetThiefScene] –í—Ö–æ–¥ –≤ –∏–Ω—Ç–µ—Ä—å–µ—Ä –¥–æ–º–∞');
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ü–µ–Ω—É (–Ω–æ –Ω–µ —É–Ω–∏—á—Ç–æ–∂–∞–µ–º)
        this.scene.pause('PetThiefScene');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ü–µ–Ω—É –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
        this.scene.launch('HouseInteriorScene', {
            house: house,
            petPosition: petPosition,
            worldData: this.world,
            collectedItems: this.collectedItems,
            pet: this.pet // –ü–µ—Ä–µ–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–∏—Ç–æ–º—Ü–∞
        });
    }
    
    /**
     * –ó–∞–ø—É—Å–∫ –≤–∑–ª–æ–º–∞ –∑–∞–º–∫–∞ –¥–≤–µ—Ä–∏
     * @param {Object} house - –î–∞–Ω–Ω—ã–µ –¥–æ–º–∞
     * @param {Object} petPosition - –ü–æ–∑–∏—Ü–∏—è –ø–∏—Ç–æ–º—Ü–∞
     */
    startDoorLockpicking(house, petPosition) {
        console.log('üîì [PetThiefScene] –ó–∞–ø—É—Å–∫ –≤–∑–ª–æ–º–∞ –¥–≤–µ—Ä–∏');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç–º—ã—á–µ–∫
        const lockpicks = this.pet.inventory.get('lockpicks');
        const cost = house.security.level; // –°—Ç–æ–∏–º–æ—Å—Ç—å = —É—Ä–æ–≤–µ–Ω—å –∑–∞–º–∫–∞
        
        if (lockpicks < cost) {
            this.showMessage(`‚ùå –ù—É–∂–Ω–æ ${cost} –æ—Ç–º—ã—á–µ–∫! –£ –≤–∞—Å: ${lockpicks}`);
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–º–æ–∫ –¥–ª—è –¥–≤–µ—Ä–∏
        const doorLock = {
            type: 'simple', // –ü–æ–∫–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–º–∫–∏ –¥–ª—è –¥–≤–µ—Ä–µ–π
            level: house.security.level,
            config: {
                pins: house.security.level,
                indicatorSpeed: 2 + (house.security.level - 1) * 0.5,
                tolerance: 15,
                maxAttempts: 3 + house.security.level,
                timeLimit: 0
            },
            cost: cost,
            onPickSuccess: () => {
                console.log('‚úÖ [PetThiefScene] –î–≤–µ—Ä—å –≤–∑–ª–æ–º–∞–Ω–∞!');
                this.enterHouseInterior(house, petPosition);
            },
            onPickFailed: () => {
                console.log('‚ùå [PetThiefScene] –ü—Ä–æ–≤–∞–ª –≤–∑–ª–æ–º–∞ –¥–≤–µ—Ä–∏');
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–º—ã—á–∫–∏
                this.pet.inventory.set('lockpicks', this.pet.inventory.get('lockpicks') - cost);
                this.updateInventoryUI();
            }
        };
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ü–µ–Ω—É
        this.scene.pause('PetThiefScene');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Å—Ü–µ–Ω—É –≤–∑–ª–æ–º–∞
        this.scene.launch('UniversalLockpickingScene', {
            lock: doorLock,
            pet: this.pet,
            lockType: doorLock.type,
            lockLevel: doorLock.level,
            config: doorLock.config,
            cost: doorLock.cost
        });
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—Ç –∏–∑ –¥–æ–º–∞
     * @param {Object} data - –î–∞–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ (—Å–æ–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã)
     */
    onReturnFromHouse(data) {
        console.log('üö™ [PetThiefScene] –í–æ–∑–≤—Ä–∞—Ç –∏–∑ –¥–æ–º–∞, —Å–æ–±—Ä–∞–Ω–æ:', data.collectedItems);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫
        this.collectedItems.coins += data.collectedItems.coins;
        this.collectedItems.jewels += data.collectedItems.jewels;
        this.collectedItems.keys += data.collectedItems.keys;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–∏—Ç–æ–º—Ü–∞
        if (this.pet) {
            if (data.collectedItems.coins > 0) {
                this.pet.addCoins(data.collectedItems.coins);
            }
            if (data.collectedItems.jewels > 0) {
                this.pet.addJewels(data.collectedItems.jewels);
            }
            if (data.collectedItems.keys > 0) {
                this.pet.addKeys(data.collectedItems.keys);
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        this.updateInventoryUI();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–æ–±—Ä–∞–Ω–æ
        if (data.collectedItems.coins > 0 || data.collectedItems.jewels > 0 || data.collectedItems.keys > 0) {
            const message = this.formatCollectedMessage(data.collectedItems);
            this.showMessage(message);
        }
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
     */
    formatCollectedMessage(items) {
        let parts = [];
        if (items.coins > 0) parts.push(`+${items.coins} üí∞`);
        if (items.jewels > 0) parts.push(`+${items.jewels} üíé`);
        if (items.keys > 0) parts.push(`+${items.keys} üîë`);
        return `–£–∫—Ä–∞–¥–µ–Ω–æ: ${parts.join(', ')}`;
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ —Å—Ü–µ–Ω—ã
     */
    shutdown() {
        console.log('üéÆ [PetThiefScene] –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å—Ü–µ–Ω—ã...');
        
        // –û—á–∏—â–∞–µ–º —Å–∏—Å—Ç–µ–º—ã
        if (this.petControlSystem) {
            this.petControlSystem.destroy();
        }
        
        if (this.worldRenderer) {
            this.worldRenderer.destroy();
        }
        
        if (this.obstacleInteractionSystem) {
            this.obstacleInteractionSystem.destroy();
        }
        
        if (this.eventSystem) {
            this.eventSystem.clear();
        }
        
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.events.off('pet:coinsCollected');
        this.events.off('pet:enterHouse');
        this.events.off('pet:targetReached');
        
        this.isGameActive = false;
        
        console.log('üéÆ [PetThiefScene] –°—Ü–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
}

