import { settings } from '../../config/settings.js';

export class MenuScene extends Phaser.Scene {
    constructor() {
        super({ key: 'MenuScene' });
    }

    create() {
        const { width, height } = this.scale;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        const isMobile = width < 600 || height < 800;
        const isSmallMobile = width < 400 || height < 600;
        
        // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —à—Ä–∏—Ñ—Ç–æ–≤
        const titleFontSize = isSmallMobile ? '28px' : (isMobile ? '36px' : '48px');
        const subtitleFontSize = isSmallMobile ? '16px' : (isMobile ? '20px' : '24px');
        const buttonFontSize = isSmallMobile ? '20px' : (isMobile ? '24px' : '32px');
        const instructionFontSize = isSmallMobile ? '14px' : (isMobile ? '16px' : '18px');
        
        // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
        const buttonPadding = isSmallMobile ? { x: 15, y: 10 } : (isMobile ? { x: 18, y: 12 } : { x: 20, y: 15 });
        const buttonSpacing = isSmallMobile ? 60 : (isMobile ? 70 : 80);
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω
        this.add.rectangle(width / 2, height / 2, width, height, 0x2c3e50);
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
        const titleY = isSmallMobile ? height * 0.25 : (isMobile ? height * 0.28 : height / 3);
        this.add.text(width / 2, titleY, 'Telepets Mini Games', {
            fontSize: titleFontSize,
            fill: '#ffffff',
            fontStyle: 'bold',
            align: 'center'
        }).setOrigin(0.5);
        
        // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
        const subtitleY = titleY + (isSmallMobile ? 40 : (isMobile ? 50 : 60));
        this.add.text(width / 2, subtitleY, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', {
            fontSize: subtitleFontSize,
            fill: '#bdc3c7',
            align: 'center'
        }).setOrigin(0.5);
        
        // –ö–Ω–æ–ø–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä—ã (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
        const buttonStartY = isSmallMobile ? height * 0.45 : (isMobile ? height * 0.47 : height / 2);
        const gameButton = this.add.text(width / 2, buttonStartY, 'üéÆ –û—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–∞', {
            fontSize: buttonFontSize,
            fill: '#ffffff',
            backgroundColor: '#3498db',
            padding: buttonPadding,
            align: 'center'
        }).setOrigin(0.5).setInteractive();
        
        gameButton.on('pointerdown', () => {
            this.scene.start('GestureTestScene');
        });
        
        // –ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
        const movementButton = this.add.text(width / 2, buttonStartY + buttonSpacing, 'üèÉ –¢–µ—Å—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è', {
            fontSize: buttonFontSize,
            fill: '#ffffff',
            backgroundColor: '#e74c3c',
            padding: buttonPadding,
            align: 'center'
        }).setOrigin(0.5).setInteractive();
        
        movementButton.on('pointerdown', () => {
            this.scene.start('MovementTestScene');
        });
        
        // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
        const instructionY = isSmallMobile ? height - 30 : (isMobile ? height - 40 : height - 50);
        this.add.text(width / 2, instructionY, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ü–µ–Ω—ã', {
            fontSize: instructionFontSize,
            fill: '#95a5a6',
            align: 'center'
        }).setOrigin(0.5);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–∞–≤–µ–¥–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞)
        if (!isMobile) {
            [gameButton, movementButton].forEach(button => {
                button.on('pointerover', () => {
                    button.setScale(1.05);
                });
                
                button.on('pointerout', () => {
                    button.setScale(1);
                });
            });
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–∫—Ç–∏–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        if (isMobile) {
            [gameButton, movementButton].forEach(button => {
                button.on('pointerdown', () => {
                    button.setScale(0.95);
                    this.time.delayedCall(100, () => {
                        button.setScale(1);
                    });
                });
            });
        }
    }
}
